<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kaqiup&#39;s blog</title>
  
  <subtitle>-My style-</subtitle>
  <link href="http://www.kaqiup.xyz/atom.xml" rel="self"/>
  
  <link href="http://www.kaqiup.xyz/"/>
  <updated>2021-04-07T17:56:22.088Z</updated>
  <id>http://www.kaqiup.xyz/</id>
  
  <author>
    <name>kaqiup</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo seo优化</title>
    <link href="http://www.kaqiup.xyz/2021/04/08/hexo-seo-you-hua/"/>
    <id>http://www.kaqiup.xyz/2021/04/08/hexo-seo-you-hua/</id>
    <published>2021-04-07T16:10:05.000Z</published>
    <updated>2021-04-07T17:56:22.088Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>版权声明：本文为CSDN博主「浪子燕青啦啦啦」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/lzy98/article/details/81140704">https://blog.csdn.net/lzy98/article/details/81140704</a></p></blockquote><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><blockquote><p> title: HEXO SEO 高级优化 </p><p>copyright: true </p><p>top: 0 </p><p>date: 2018-07-19 21:17:42 </p><p>tags: SEO,HEXO,HEXO SEO优化 </p><p>categories: Debian </p><p>permalink: </p><p>password: </p><p>keywords: [HEXO,HEXO SEO优化] </p><p>description: 总结一下使用Hexo搭建博客后，SEO优化方案的总结，后期会不定期更新。</p></blockquote><h2 id="本地文章优化"><a href="#本地文章优化" class="headerlink" title="本地文章优化"></a>本地文章优化</h2><h3 id="添加sitemap"><a href="#添加sitemap" class="headerlink" title="添加sitemap"></a>添加sitemap</h3><p>首先给你的文章生成sitemap文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap --save <span class="token comment">#sitemap.xml适合提交给谷歌搜素引擎</span><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-baidu-sitemap --save <span class="token comment">#baidusitemap.xml适合提交百度搜索引擎</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后在站点配置文件_config.yml中添加以下代码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">**<span class="token comment"># 自动生成sitemap**</span>sitemap:path: sitemap.xmlbaidusitemap:path: baidusitemap.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后修改站点配置文件_config.yml</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># URL</span><span class="token comment"># If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span>url: http://你的网站<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>每次hexo g后都会在/public目录下生成sitemap.xml和baidusitemap.xml，这就是你的站点地图。</p><h3 id="优化结构"><a href="#优化结构" class="headerlink" title="优化结构"></a>优化结构</h3><p>seo搜索引擎优化认为，网站的最佳结构是用户从首页点击三次就可以到达任何一个页面，但是我们使用hexo编译的站点打开文章的url是：sitename/year/mounth/day/title四层的结构，这样的url结构很不利于seo，爬虫就会经常爬不到我们的文章，于是，我们可以将url直接改成sitename/title的形式，并且title最好是用英文，在根目录的配置文件下修改permalink如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">url: http://www.kaqiup.xyzroot: /permalink: :title.htmlpermalink_defaults:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="首页标题优化"><a href="#首页标题优化" class="headerlink" title="首页标题优化"></a>首页标题优化</h3><p>SEO最重要的是你的标题，一般搜索都是搜索你的标题。</p><p>更改index.swig文件(your-hexo-site\themes\next\layout);</p><p>将下面这段代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>% block title %<span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> config.title <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span>% endblock %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>% block title %<span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> config.title <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> - <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> theme.description <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span>% endblock %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时候你的首页会更符合网站名称 - 网站描述这习惯。</p><p>进阶，做了seo优化，把关键词也显示在title标题里，可改成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>% block title %<span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> theme.keywords <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> - <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> config.title <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> theme.description <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span>% endblock %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：别堆砌关键字，整个标题一般不超过80个字符，可以通过chinaz的seo综合查询检查。</p></blockquote><h3 id="关键词与描述"><a href="#关键词与描述" class="headerlink" title="关键词与描述"></a>关键词与描述</h3><p>搜索引擎除了主要抓取标题外，页面的关键词和描述也会抓取。</p><p>在\scaffolds\post.md中添加如下代码，用于生成的文章中添加关键字和描述。 </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">keywords: description: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在\themes\next\layout_partials\head.swig有如下代码，用于生成文章的keywords。暂时还没找到生成description的位置。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>% <span class="token keyword">if</span> page.keywords %<span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span>meta <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"keywords"</span> <span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token string">"&#123;&#123; page.keywords &#125;&#125;"</span> /<span class="token operator">></span><span class="token punctuation">&#123;</span>% <span class="token keyword">elif</span> page.tags and page.tags.length %<span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span>meta <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"keywords"</span> <span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token string">"&#123;% for tag in page.tags %&#125;&#123;&#123; tag.name &#125;&#125;,&#123;% endfor %&#125;"</span> /<span class="token operator">></span><span class="token punctuation">&#123;</span>% <span class="token keyword">elif</span> theme.keywords %<span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span>meta <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"keywords"</span> <span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token string">"&#123;&#123; theme.keywords &#125;&#125;"</span> /<span class="token operator">></span><span class="token punctuation">&#123;</span>% endif %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在\themes\next\layout_macro\post.swig中找到这个位置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>% <span class="token keyword">if</span> post.description %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将以下代码去掉：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>% <span class="token keyword">if</span> post.description %<span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> post.description <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"post-more-link text-center"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>a <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"btn"</span> <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"&#123;&#123; url_for(post.path) &#125;&#125;"</span><span class="token operator">></span>   <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> __<span class="token punctuation">(</span><span class="token string">'post.read_more'</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span>raquo<span class="token punctuation">;</span>  <span class="token operator">&lt;</span>/a<span class="token operator">></span> <span class="token operator">&lt;</span>/div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>否则首页的文章摘要就会变成文章的description。</p><p>举个例子：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: HEXO SEO优化方法总结copyright: <span class="token boolean">true</span>top: <span class="token number">0</span>date: <span class="token number">2018</span>-07-19 <span class="token number">21</span>:17:42tags: SEOcategories: Debianpermalink:password:keywords: <span class="token punctuation">[</span>HEXO,HEXO SEO优化<span class="token punctuation">]</span>description: 总结一下使用Hexo搭建博客后，SEO优化方案的总结，后期会不定期更新。---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="nofollow-标签"><a href="#nofollow-标签" class="headerlink" title="nofollow 标签"></a>nofollow 标签</h3><p>给非友情链接的出站链接添加 “nofollow” 标签，nofollow标签是由谷歌领头创新的一个“反垃圾链接”的标签，并被百度、yahoo等各大搜索引擎广泛支持，引用nofollow标签的目的是：用于指示搜索引擎不要追踪（即抓取）网页上的带有nofollow属性的任何出站链接，以减少垃圾链接的分散网站权重。</p><p>以hexo的NexT主题为例，需要修改两处</p><ol><li>找到footer.swig，路径在your-hexo-site\themes\next\layout_partials，将下面代码</li></ol><p><img src="https://img-blog.csdnimg.cn/img_convert/4d3112a36754b3332027bd55782681db.png" alt="hexo-seo-01"></p><p>改成：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8f376060aaba9ceb94098a598fa25abd.png" alt="hexo-seo-01"></p><p>将下面代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>a <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"theme-link"</span> <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"https://github.com/iissnan/hexo-theme-next"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">a <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"theme-link"</span> <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"https://github.com/iissnan/hexo-theme-next"</span> <span class="token assign-left variable">rel</span><span class="token operator">=</span><span class="token string">"external nofollow"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>修改sidebar.swig文件，路径在your-hexo-site\themes\next\layout_macro，将下面代码</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"&#123;&#123; link &#125;&#125;"</span> <span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/a<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"&#123;&#123; link &#125;&#125;"</span> <span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token string">"_blank"</span> <span class="token assign-left variable">rel</span><span class="token operator">=</span><span class="token string">"external nofollow"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span>/a<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将下面代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"http://creativecommons.org/licenses/&#123;&#123; theme.creative_commons &#125;&#125;/4.0"</span> <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"cc-opacity"</span> <span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">"http://creativecommons.org/licenses/&#123;&#123; theme.creative_commons &#125;&#125;/4.0"</span> <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"cc-opacity"</span> <span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token string">"_blank"</span> <span class="token assign-left variable">rel</span><span class="token operator">=</span><span class="token string">"external nofollow"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>安装nofollow插件</li></ol><p>减少出站链接能够有效防止权重分散，hexo有很方便的自动为出站链接添加nofollow的插件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-autonofollow --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该插件会将博客中的出站链接自动加上nofollow属性，例外请在站点配置文件_config.xml中添加如下字段</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nofollow:  enable: <span class="token boolean">true</span>  exclude:  - www.langzi.fun  - 友链地址 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样，例外的链接将不会被加上nofollow属性。</p><h3 id="robots-txt文件"><a href="#robots-txt文件" class="headerlink" title="robots.txt文件"></a>robots.txt文件</h3><p>在source文件夹中新建文件robots.txt，可以参考我的：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">User-agent: * Allow: /Allow: /archives/Disallow: /vendors/Disallow: /categories/Sitemap: http://www.langzi.fun/sitemap.xmlSitemap: http://www.langzi.fun/baidusitemap.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="开启SEO优化选项"><a href="#开启SEO优化选项" class="headerlink" title="开启SEO优化选项"></a>开启SEO优化选项</h3><p>hexo博客next提供了seo优化选项，在主题配置文件_config.yml中有个选项是seo，默认是false，改成true即开启了seo优化，会进行一些seo优化，如改变博文title等，然后相同文件下有个关键字选项keywords，填充上，写博文时最好每篇博文都加上keywords。</p><p>我用的是next的主题，把该主题的_config.yml的默认keyword改成你的网址关键词</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Set default keywords (Use a comma to separate)</span>keywords: <span class="token string">"langzi"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="开启压缩文件"><a href="#开启压缩文件" class="headerlink" title="开启压缩文件"></a>开启压缩文件</h3><p>因为hexo生成的文件是静态html，里面占用了大量的空白符。使用gulp进行压缩接口提高访问速度并且降低内存。</p><p>使用命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> gulp -g<span class="token function">npm</span> <span class="token function">install</span> gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save<span class="token function">npm</span> <span class="token function">install</span> gulp-concat<span class="token function">npm</span> <span class="token function">install</span> gulp-imagemin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在hexo blog文件夹下创建gulpfile.js:</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  cssmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-minify-css'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-imagemin'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  concat <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-concat'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//JS压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'uglify'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/js/**/.js'</span><span class="token punctuation">,</span><span class="token string">'!./public/js/**/*min.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//只是排除min.js文件还是不严谨，一般不会有问题，根据自己博客的修改我的修改为return gulp.src(['./public/**/*.js','!./public/zuoxi/**/*.js',,'!./public/radio/**/*.js'])</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/js'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对应修改为./public即可</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//public-fancybox-js压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'fancybox:js'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/vendors/fancybox/source/jquery.fancybox.js'</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/vendors/fancybox/source/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 合并 JS</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'jsall'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/***/**.js'</span><span class="token punctuation">)</span>  <span class="token comment">// 压缩后重命名</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'app.js'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//public-fancybox-css压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'fancybox:css'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/vendors/fancybox/source/jquery.fancybox.css'</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cssmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/vendors/fancybox/source/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//CSS压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'cssmin'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/css/main.css'</span><span class="token punctuation">,</span><span class="token string">'!./public/css/*min.css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  ​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cssmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/css/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//图片压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'images'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/uploads/**.**'</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>​      progressive<span class="token operator">:</span> <span class="token boolean">false</span>​    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/uploads/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩 public 目录 html文件 public/***/**.hmtl 表示public下所有文件夹中html，包括当前目录</span>  gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/***/**.html'</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>​       removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>​       minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>​       minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>​       minifyURLs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>​    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>​    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'build'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'uglify'</span><span class="token punctuation">,</span> <span class="token string">'cssmin'</span><span class="token punctuation">,</span> <span class="token string">'fancybox:js'</span><span class="token punctuation">,</span> <span class="token string">'fancybox:css'</span><span class="token punctuation">,</span> <span class="token string">'jsall'</span><span class="token punctuation">,</span><span class="token string">'images'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//, 'minify-html'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在根目录下的package.json文件中生成写入scripts:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span><span class="token string">"build"</span><span class="token builtin class-name">:</span> <span class="token string">"hexo clean &amp;&amp; hexo g &amp;&amp; gulp build "</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样每次输入npm run build就会自动清理上次生成的文件，然后生成新的文件，最后压缩文件。</p><h2 id="开启推送"><a href="#开启推送" class="headerlink" title="开启推送"></a>开启推送</h2><p>将网站链接提交到百度，百度搜索引擎提交入口 ,然后验证你的网站，这一点网上有很详细的教程我就不复述了，验证确认你的网站后，继续验证你的网站的robots.txt和sitemap文件是否可用，一般都是可用的。</p><p>然后就可以开始推送了，基本上推送有三种方式：主动推送&gt;自动推送&gt;sitemap三种，一般主动提交比手动提交效果好。</p><h3 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h3><p>把下面的代码放到D:\lang_blog\themes\next\source\js\src目录下，文件名为bai.js</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token punctuation">(</span><span class="token function-name function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    var bp <span class="token operator">=</span> document.createElement<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    bp.src <span class="token operator">=</span> <span class="token string">'//push.zhanzhang.baidu.com/push.js'</span><span class="token punctuation">;</span>    var s <span class="token operator">=</span> document.getElementsByTagName<span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    s.parentNode.insertBefore<span class="token punctuation">(</span>bp, s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在D:\lang_blog\scaffolds目录下的post.md文件（模板文件中加入这么一行）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">"text/javascript"</span> <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"/js/src/bai.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样只要访问你的这个页面，就会自动向百度推送你的这个网页。</p><h3 id="手动推送"><a href="#手动推送" class="headerlink" title="手动推送"></a>手动推送</h3><p>用Python写了一个自动推送的脚本，首先你要在百度站长平台获取你的网址的token</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c48c742231a8290504012e6a2db2d47d.png" alt="SEO"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#coding:utf-8</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup <span class="token keyword">as</span> bp<span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 自动推送开启....'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>site_url <span class="token operator">=</span> <span class="token string">'http://www.这里改写成你的网站.com/baidusitemap.xml'</span><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 获取sitemap链接....'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    data_ <span class="token operator">=</span> bp<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>site_url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception<span class="token punctuation">.</span>e<span class="token punctuation">:</span>    <span class="token keyword">print</span> elist_url<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">get_</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'curl/7.12.1 '</span><span class="token punctuation">,</span>             <span class="token string">'Content-Type'</span><span class="token punctuation">:</span><span class="token string">'text/plain '</span><span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">'http://data.zz.baidu.com/urls?site=www.这里改写成你的网站.com&amp;token=这里改写成你的token'</span><span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">print</span> r<span class="token punctuation">.</span>status_code        <span class="token keyword">print</span> r<span class="token punctuation">.</span>content    <span class="token keyword">except</span> Exception<span class="token punctuation">,</span>e<span class="token punctuation">:</span>        <span class="token keyword">print</span> e<span class="token keyword">print</span> <span class="token string">'---------------------------------'</span><span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>data_<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'loc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span> x<span class="token punctuation">,</span>y<span class="token punctuation">.</span>string    list_url<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">.</span>string<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'http://'</span><span class="token punctuation">,</span><span class="token string">'http://www.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string">'---------------------------------'</span><span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 开始推送....'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> list_url<span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 当前推送条目为:'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token operator">+</span> x    get_<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改完后双击启动一次即可，每次写完文章后，都启动推送一次。已经使用主动推送的站点，依然可以部署自动推送的JS代码，二者一起使用。</p><h2 id="获取关键词"><a href="#获取关键词" class="headerlink" title="获取关键词"></a>获取关键词</h2><p>现在搜关键词全是广告，其实百度已经提供了一个接口，每次使用过百度搜索的时候下面的下拉条会出现一堆相关的关键词，这下关键词的权重是非常高的，采集这些关键词然后用在自己的文章中效果还可以，但是要记住不能堆砌关键词。</p><p>接口：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd<span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>比如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd<span class="token operator">=</span>langzi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>搜过结果：</p><pre class="line-numbers language-none"><code class="language-none">window.baidu.sug(&#123;q:&quot;langzi&quot;,p:false,s:[&quot;浪子彦&quot;,&quot;朗姿女装&quot;,&quot;朗姿&quot;,&quot;朗姿唯品会&quot;,&quot;浪子彦直播&quot;,&quot;浪子心声&quot;,&quot;浪子&quot;,&quot;浪子回头&quot;,&quot;朗姿股份&quot;,&quot;浪子燕青&quot;]&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般回显10个关键词</p><p>提取代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#coding:utf-8</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 关键词采集开启....'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment">#time.sleep(0.5)</span>key <span class="token operator">=</span> <span class="token builtin">raw_input</span><span class="token punctuation">(</span><span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'输入关键词:'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>site_url <span class="token operator">=</span> <span class="token string">'https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd='</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>site_url<span class="token punctuation">)</span><span class="token keyword">print</span> r<span class="token punctuation">.</span>content<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'window.baidu.sug(&#123;q:'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&#125;);'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">',p:false,s:'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>网上也有很多百度下拉框工具，可以去找一下。</p><h2 id="站内优化"><a href="#站内优化" class="headerlink" title="站内优化"></a>站内优化</h2><p>这里就真正的涉及到SEO的相关知识了，对你的文章的结构，描述，关键词进行优化。</p><h3 id="title优化"><a href="#title优化" class="headerlink" title="title优化"></a>title优化</h3><p>搜索引擎在抓取网页时，最先读取的就是网页标题，所以title是否正确设置极其重要。title一般不超过80个字符，而且词语间要用英文“-”隔开，因为计算机只对英语的敏感性较高，对汉语的敏感性不高。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">用法：<span class="token operator">&lt;</span>title<span class="token operator">></span>网站标题<span class="token operator">&lt;</span>/title<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意点：</p><ol><li><p>首页title写法：首页的title写法格式一般是“总标题-特别重要的关键词或者一句话含有特别重要关键词的描述”。注意这里的“-”是英文，要问我为什么呢?这个因为互联网不是我们国内开发的，汉语不是标准，计算机只对英语敏感性较高，而对汉语敏感性不太高。</p></li><li><p>栏目页title写法：栏目页title的写法有两种，关键词名称命名写法是“栏目名称-总名称”，非关键词命名写法是：“栏目名称 栏目关键词-总名称”。</p></li><li><p>分类列表页的title写法：用关键词为这个栏目起名，然后按照下列顺序填写便可了“分类列表页名称-栏目名称-总名称”。</p></li></ol><p>注意事项：  </p><ul><li>每个标题应该是根据当前内容设置的独特不重复的。</li><li>字数制。不能太长，要不然搜索引擎结果列表会显示不全。最好不超过 25 个中文字。最好是在 10~20 之间。</li><li>切勿堆砌关键词。这是很多人常犯的错误关键词最好出现在最前面</li><li>标题有吸引力。毕竟有吸引力的标题才能让用户点击</li><li>连词符的使用。可以使用 |-&gt;</li><li>不要使用没有意义的句子</li></ul><h3 id="keywords优化"><a href="#keywords优化" class="headerlink" title="keywords优化"></a>keywords优化</h3><p>主要作用是告诉搜索引擎，这个网站内容是什么。因为，好多站长在keywords堆砌关键词，所以好多搜索引擎不太重视keywords了。建议大家还是认真填写keywords，有的搜索引擎还是很重视的，由于现在词频和密度对于 SEO 影响不大，所以只要保持你的正文中出现 4~6 次关键词就可以了。千万不能堆砌关键词。</p><p>注意点：  </p><ul><li>首页keywords写法：首页keywords按照选定的栏目名称，在首页的keywords中加入总名称、栏目名称和一两个关键词。</li></ul><p>栏目keywords写法：栏目的keywords其栏目下所有分类列表的名称列出，加上栏目关键字，写法是“栏目名称,栏目关键字,栏目分类列表名称”</p><p>分类列表页keywords写法：将你这个栏目中的主要关键字写入。</p><h3 id="Description优化"><a href="#Description优化" class="headerlink" title="Description优化"></a>Description优化</h3><p>功能让搜索引擎是判断整个页面内容的，当中要写入的内容是你页面内容的简介。description一般不超过100个字符。对于个人站点而言，描述标签最好是一句通顺的句子，如果不能的话，则宁可不要。</p><p>注意点：</p><ul><li>首页description写法：description的写法就是将首页的标题、关键词和一些特殊栏目的内容融合到里面，写成简单的介绍形式，不要只写关键词。  </li><li>栏目description写法：将栏目的标题、关键字、分类列表名称，尽量的写入description中，仍是尽量写成介绍形式。  </li><li>分类description写法：是将你这个栏目中的主要关键字写入。</li></ul><h3 id="H标签优化"><a href="#H标签优化" class="headerlink" title="H标签优化"></a>H标签优化</h3><p>H 标签的重要性可能是仅次与页面标签。H1-&gt;H6 的重要性依次降低。所以建议在页面的 H1 和 H2 标签中混入关键词</p><h3 id="图片-ALT-文字优化"><a href="#图片-ALT-文字优化" class="headerlink" title="图片 ALT 文字优化"></a>图片 ALT 文字优化</h3><p>插入图片的时候会提示输入文字，这个不能敷衍。图片 ALT 文字出现的关键词对页面相关性也有一定的影响。同样的，也不要在 ALT 上堆砌关键词。</p><h3 id="内部链接及锚文字优化"><a href="#内部链接及锚文字优化" class="headerlink" title="内部链接及锚文字优化"></a>内部链接及锚文字优化</h3><p>内部链接对于爬行和收录具有很重要的意义。内部链接对页面关键词相关性也有影响，最主要的就是在内部链接中使用锚文字。</p><p>锚文字是告诉搜索引擎被链接页面主题内容的最重要依据之一。我们有时候可能无法控制外部链接的锚文字，但是对于站内的内部链接锚文字我们可以控制。不过有几点需要注意：</p><ul><li><p>适当出现匹配关键词的锚文字</p></li><li><p>锚文字不能集中导航或者页尾，要分散在正文中</p></li><li><p>不要过度优化锚文字，要不然有可能会被搜索引擎惩罚</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="hexo" scheme="http://www.kaqiup.xyz/categories/hexo/"/>
    
    
    <category term="hexo优化" scheme="http://www.kaqiup.xyz/tags/hexo%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>折腾啊hexo</title>
    <link href="http://www.kaqiup.xyz/2021/04/07/zhe-teng-a-hexo/"/>
    <id>http://www.kaqiup.xyz/2021/04/07/zhe-teng-a-hexo/</id>
    <published>2021-04-07T14:00:28.000Z</published>
    <updated>2021-04-07T16:11:34.888Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="说说那些折腾博客的事"><a href="#说说那些折腾博客的事" class="headerlink" title="说说那些折腾博客的事"></a>说说那些折腾博客的事</h3><p>今天陆陆续续把主题从头到尾换了一遍，在各种调整，现在不想动了，我知道此刻应该是我要学习前端的时候了，毕竟博客已经有点模样了，够看就好。  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="hexo" scheme="http://www.kaqiup.xyz/categories/hexo/"/>
    
    
    <category term="心情" scheme="http://www.kaqiup.xyz/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>NULL</title>
    <link href="http://www.kaqiup.xyz/2021/04/03/tian-ge-kong-xian-wang-hou-zai-geng/"/>
    <id>http://www.kaqiup.xyz/2021/04/03/tian-ge-kong-xian-wang-hou-zai-geng/</id>
    <published>2021-04-03T03:46:03.000Z</published>
    <updated>2021-04-07T16:11:27.381Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-CghmnbLl" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="368962" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>少年时我们追求激情，<br>成熟后却迷恋平庸，<br>在我们寻找，伤害，背离之后，<br>还能一如既往的相信爱情，<br>这是一种勇气。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="hexo" scheme="http://www.kaqiup.xyz/categories/hexo/"/>
    
    
    <category term="心情" scheme="http://www.kaqiup.xyz/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
